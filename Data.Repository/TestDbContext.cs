using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Data.Repository
{
	using Data.Model;
	using Repository;
	using System.Linq;

	[System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
	public class TestDbContext : Core.Common.Data.DbContextBase
	{
		public System.Data.Entity.DbSet<Customer> Customer { get; set; } // Customer

		static TestDbContext()
		{
			System.Data.Entity.Database.SetInitializer<TestDbContext>(null);
		}

		public TestDbContext()
			: base("Name=DatabaseXConnection")
		{
		}

		public TestDbContext(string connectionString)
			: base(connectionString)
		{
		}

		public TestDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
			: base(connectionString, model)
		{
		}

		public TestDbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
			: base(existingConnection, contextOwnsConnection)
		{
		}

		public TestDbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
			: base(existingConnection, model, contextOwnsConnection)
		{
		}

		protected override void Dispose(bool disposing)
		{
			base.Dispose(disposing);
		}

		public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
		{
			var sqlValue = param.SqlValue;
			var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
			if (nullableValue != null)
				return nullableValue.IsNull;
			return (sqlValue == null || sqlValue == System.DBNull.Value);
		}

		protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
		{
			base.OnModelCreating(modelBuilder);

			modelBuilder.Configurations.Add(new CustomerConfiguration());
			modelBuilder.Configurations.Add(new OrderConfiguration());
			modelBuilder.Configurations.Add(new SysdiagramsConfiguration());
		}

		public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
		{
			modelBuilder.Configurations.Add(new CustomerConfiguration(schema));
			modelBuilder.Configurations.Add(new OrderConfiguration(schema));
			modelBuilder.Configurations.Add(new SysdiagramsConfiguration(schema));
			return modelBuilder;
		}
	}
}
// </auto-generated>
